What happens when you initialize a repository? Why do you need to do it?

    Creates a GIT repository to keep track of changes to all the files in the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    The staging area allows the programmer manage one commit per logical change. Keeping commits small makes code troubleshooting analysis easier.

How can you use the staging area to make sure you have one commit per logical
change?

    The staging area allows the programmer to specify exactly what changes are to be committed.  The objective is to keep commits small and limit each commit to one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    Branch out for unique bug fixes, new features or to update docs.  Branches allow development to occur without affecting the production level (master) branch until a particular branch is merged with the master branch.

How do the diagrams help you visualize the branch structure?

    Allows me to see the relationship of each branch to the master and the relationship of each to commit to its parent.  I can also visualize the reachability to each commit.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    A new branch (commit) is created incorporating the commits in each branch independent branch.  The new commit points to the last commit in each branch as a parent of the new commit.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?